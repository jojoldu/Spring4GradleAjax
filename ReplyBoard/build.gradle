apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

//java version
sourceCompatibility = 1.8
//application version
version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

//dependency version
def version = [
spring: '4.1.3.RELEASE'
, validation: '1.1.0.Final'
, junit: '4.11'
, servletApi: '3.0.1'
, jstl: '1.2'
, slf4j: '1.7.6'
, mockito: '1.9.0'
, cglib: '2.2.2'
, logback: '1.0.6'
, hibernateCore: '4.3.7.Final'
, javassist: '3.18.2-GA'
, mysql: '5.1.34'
, commonsDbcp: '1.4'
, jackson: '2.4.4'
, fileupload:'1.3.1' 
, security:'3.2.5.RELEASE'
]

//dependency 
dependencies {
    compile "org.springframework:spring-webmvc:${version.spring}",
    	  "org.springframework:spring-jdbc:${version.spring}", 
          "org.springframework:spring-tx:${version.spring}",
          "org.springframework:spring-context:${version.spring}",
          "org.springframework:spring-orm:${version.spring}",
          "org.springframework.security:spring-security-web:${version.security}",
          "org.springframework.security:spring-security-config:${version.security}",
          "javax.validation:validation-api:${version.validation}",
          "cglib:cglib-nodep:${version.cglib}",
          "ch.qos.logback:logback-classic:${version.logback}",
          "org.slf4j:slf4j-api:${version.slf4j}",
          "commons-dbcp:commons-dbcp:${version.commonsDbcp}",
          "org.hibernate:hibernate-core:${version.hibernateCore}",
          "org.javassist:javassist:${version.javassist}", 
          "mysql:mysql-connector-java:${version.mysql}", 
		  "com.fasterxml.jackson.core:jackson-annotations:${version.jackson}",
		  "com.fasterxml.jackson.core:jackson-core:${version.jackson}",
		  "com.fasterxml.jackson.core:jackson-databind:${version.jackson}",
		  "commons-fileupload:commons-fileupload:${version.fileupload}"
		  
           
          
  providedCompile "javax.servlet:javax.servlet-api:${version.servletApi}"
 
  testCompile "org.springframework:spring-test:${version.spring}",
              "junit:junit:${version.junit}",
              "org.mockito:mockito-core:${version.mockito}"
                                         
  runtime "javax.servlet:jstl:${version.jstl}",
  		  "org.slf4j:jcl-over-slf4j:${version.slf4j}"
}

// logback(slf4j)를 사용하기 때문에 모든 의존성에서 commons-logging는 제외
[configurations.runtime, configurations.default]*.exclude(module: 'commons-logging')
 
// JAVA 컴파일시 인코딩 설정
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// 프로젝트 초기화
// 1. java source directory 생성 : src/main/java, src/test/java
// 2. resource directory 생성    : src/main/resource, src/test/resource
// 3. web source directory 생성  : src/main/webapp, src/main/webapp/WEB-INF
task initProject(description: 'initialize project') << {
    createDir = {
        println "create source directory: $it"
        it.mkdirs()
    }
    sourceSets*.java.srcDirs*.each createDir
    sourceSets*.resources.srcDirs*.each createDir
    createDir webAppDir
    createDir new File(webAppDir, '/WEB-INF')
}
